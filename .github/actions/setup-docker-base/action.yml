name: Setup Docker Base
description: Common setup logic for setting up docker environment

inputs:
  image-name:
    required: true
    description: Name of the docker image

  tag:
    required: false
    description: Tag to use for the docker image. If not provided will pick version from pyproject.toml
    default: 'from-pyproject'

  context:
    required: false
    description: Context to use for the docker build
    default: '.'

  private-repo-access:
    required: false
    description: Whether to access private repositories
    default: "true"

  repo-ssh-key:
    required: false
    description: SSH private key for accessing private repos

  script-to-add-private-pkgs:
    required: false
    description: Script to add private packages

  run-docker-scout:
    required: false
    description: Whether to run docker scout
    default: "true"

  build-args:
    required: false
    description: Optional build arguments to pass to Docker build
    default: ""

  github-token:
    required: true
    description: GitHub token to comment on PR

  docker-user:
    required: true
    description: Docker username to push/pull from ghcr.io/datagenie-ai/

  docker-password:
    required: true
    description: Docker password to push/pull from ghcr.io/datagenie-ai/


runs:
  using: "composite"
  steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set Container version
      shell: bash
      run: |
        if [[ "${{ inputs.tag }}" == "from-pyproject" ]]; then
          version=$(head -n 5 pyproject.toml | grep 'version' | cut -d'=' -f2 | sed "s/[, \"]//g")
          echo "image_version=$version" >> $GITHUB_ENV
        else
          echo "image_version=${{ inputs.tag }}" >> $GITHUB_ENV
        fi
        echo "image_version=${{ env.image_version }}"

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ inputs.docker-user }}
        password: ${{ inputs.docker-password }}

    - name: Setup SSH to access private repos
      if: ${{ inputs.private-repo-access }}
      shell: bash
      run: |
        echo ${{ inputs.script-to-add-private-pkgs }} | base64 --decode > add-key.sh
        echo ${{ inputs.repo-ssh-key }} | base64 --decode > id_ed25519
        chmod 400 id_ed25519
        export SSH_AUTH_SOCK=/tmp/ssh_agent.sock
        ssh-agent -a "$SSH_AUTH_SOCK" > /dev/null
        echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV
        ssh-add id_ed25519

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.context }}
        push: true
        build-args: |
          ${{ inputs.build-args }}
        tags: ghcr.io/datagenie-ai/${{ inputs.image-name }}:${{ env.image_version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        ssh: default
        sbom: true
        

    - name: Docker Scout
      if: ${{ inputs.run-docker-scout }}
      id: docker-scout
      uses: docker/scout-action@v1
      with:
        dockerhub-user: ${{ inputs.docker-user }}
        dockerhub-password: ${{ inputs.docker-password }}
        command: quickview,cves,recommendations
        image: ghcr.io/datagenie-ai/${{ inputs.image-name }}:${{ env.image_version }}
        ignore-unchanged: false
        only-severities: critical,high
        write-comment: true
        github-token: ${{ inputs.github-token }}
