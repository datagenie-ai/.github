name: Setup Docker Base
description: Common setup logic for setting up docker environment

inputs:
  image-name:
    required: true
    description: Name of the docker image

  tag:
    required: false
    description: Tag to use for the docker image. If not provided will pick version from pyproject.toml (provide path to pyproject.toml)
    default: 'pyproject.toml'

  context:
    required: false
    description: Context to use for the docker build
    default: '.'

  build-args:
    required: false
    description: Optional build arguments to pass to Docker build
    default: ""

  # ssh
  ssh-key:
    required: false
    description: SSH private key for accessing private repos

  # ghcr.io registry
  registry-username:
    required: true
    description: Docker username to push/pull from ghcr.io/datagenie-ai/

  registry-password:
    required: true
    description: Docker password to push/pull from ghcr.io/datagenie-ai/

  # docker scout
  run-docker-scout:
    required: false
    description: Whether to run docker scout, then dockerhub username and password are required
    default: "true"

  dockerhub-user:
    required: false
    description: DockerHub user for the running Docker Scout

  dockerhub-password:
    required: false
    description: DockerHub password for the running Docker Scout

  # github token for writing comments
  github-token:
    required: false
    description: GitHub token for writing comments


runs:
  using: "composite"
  steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Setup SSH agent
      uses: datagenie-ai/.github/.github/actions/setup-ssh-agent@main
      with:
        ssh-key: ${{ inputs.ssh-key }}

    - name: Set Container version
      shell: bash
      run: |
        if [[ "${{ inputs.tag }}" == *pyproject.toml* ]]; then
          version=$(head -n 5 ${{ inputs.tag }} | grep 'version' | cut -d'=' -f2 | sed "s/[, \"]//g")
          echo "image_version=$version" >> $GITHUB_ENV
          echo "Container version set from pyproject: $version"
        else
          echo "image_version=${{ inputs.tag }}" >> $GITHUB_ENV
          echo "Container version set from input tag: ${{ inputs.tag }}"
        fi

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ inputs.registry-username }}
        password: ${{ inputs.registry-password }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # add ssh key for accessing private repos
    - name: Build and push Docker image (with SSH)
      if: inputs.ssh-key != ''
      id: build-and-push-with-ssh
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.context }}
        push: true
        build-args: |
          ${{ inputs.build-args }}
        tags: ghcr.io/datagenie-ai/${{ inputs.image-name }}:${{ env.image_version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        ssh: |
          default=${{ env.SSH_AUTH_SOCK }}
        sbom: true

    # no access to private repos
    - name: Build and push Docker image
      if: inputs.ssh-key == ''
      id: build-and-push
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.context }}
        push: true
        build-args: |
          ${{ inputs.build-args }}
        tags: ghcr.io/datagenie-ai/${{ inputs.image-name }}:${{ env.image_version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        sbom: true

    - name: Docker Scout
      if: ${{ inputs.run-docker-scout }} && ${{ inputs.dockerhub-user }} && ${{ inputs.dockerhub-password }}
      id: docker-scout
      uses: docker/scout-action@v1
      with:
        dockerhub-user: ${{ inputs.dockerhub-user }}
        dockerhub-password: ${{ inputs.dockerhub-password }}
        command: quickview,cves,recommendations
        image: ghcr.io/datagenie-ai/${{ inputs.image-name }}:${{ env.image_version }}
        ignore-unchanged: false
        only-severities: critical,high
        write-comment: true
        github-token: ${{ inputs.github-token }}
